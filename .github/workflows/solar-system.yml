name: Solar System Workflow
on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: superuser
    MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}
jobs:
    unit-testing:
      name: Unit Testing
      runs-on: ubuntu-latest
      container: 
        image: node:20
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Cache Dependencies
        uses: actions/cache@v4.2.3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - name: Install Dependencies
        run: npm install
      - name: Unit Testing
        run: npm test
      - name: Archive Test Result
        uses: actions/upload-artifact@v4
        with:
          name: Mocha-Test-Result
          path: test-results.xml
    code-coverage:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        - name: Setup NodeJS 18
          uses: actions/setup-node@v4
          with:
              node-version: 18
        - name: Cache Dependencies
          uses: actions/cache@v4.2.3
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        - name: Install Depnedencies
          run: npm install
        - name: Check Coverage
          continue-on-error: true
          run: npm run coverage
        - name: Upload Code Coverage Reports
          uses: actions/upload-artifact@v4
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5
    docker:
      name: Dockerize
      runs-on: ubuntu-latest
      needs: [unit-testing, code-coverage]
      permissions:
        packages: write
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        - name: Login to DockerHub
          uses: docker/login-action@v3.4.0
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Build Image
          uses: docker/build-push-action@v6.18.0
          with:
            push: true
            tags: ghcr.io/${{ github.repository_owner }}/solarr-system:${{ github.sha }}
    dev-deploy:
      name: Deploy to dev
      runs-on: ubuntu-latest
      needs: docker
      environment: 
        name: development
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        - name: Install kubectl
          uses: azure/setup-kubectl@v3
          with:
            version: 'v1.28.1'
        - name: Setup kubeconfig
          uses: azure/k8s-set-context@v4.0.1
          with:
            method: kubeconfig
            kubeconfig: ${{ secrets.KUBECONFIG }}
        - name: Print Cluster and kubectl Versions
          run: kubectl version -o yaml
        - name: Fetch Ingress IP
          run: echo "INGRESS_IP=$(kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].ip}")" >> $GITHUB_ENV
        - name: Replace Tokens in Manifest Files
          uses: cschleiden/replace-tokens@v1.3
          with:
            files: '["kubernetes/development/*.yaml"]'
          env:
            NAMESPACE: ${{ vars.NAMESPACE }}
            REPLICAS: ${{ vars.REPLICAS }}
            IMAGE: ghcr.io/${{ github.repository_owner }}/solarr-system:${{ github.sha }}
            INGRESS_IP: ${{ env.INGRESS_IP }}
        - name: Print Manifest Files
          run: cat kubernetes/development/*.yaml

